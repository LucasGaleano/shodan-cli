from typing import NewType
from shodan import Shodan
from loggingHelper import logger
import json
import syslog
from repository import Repository, TypeService


def get_data(banner, field):
    try:
        if field == 'hostnames':
            return banner[field][0]
        return banner[field]
    except:
        return '-'

def log_json(jsonFile, content):
    json_file.write(json.dumps(content))
    json_file.write('\n')

logger.info('Starting shodan client.')


with open('/root/.config/shodan/api_key') as key:
    API_KEY = key.readline()

json_file = open('log.json','a')
repo = Repository('ddbb')
typeService = TypeService()

api = Shodan(API_KEY)

for banner in api.stream.alert():
    timestamp = get_data(banner, 'timestamp')
    hostname = get_data(banner, 'hostnames')
    ip = get_data(banner, 'ip_str')
    port = get_data(banner, 'port')
    protocol = get_data(banner, 'transport')
    data = get_data(banner, 'data').replace('\n', ' ').replace('\r', '')

    if repo.is_new_service(ip, port, protocol):
        repo.add_new_service(ip, port, protocol)
        logger.info(f'type={typeService.NEW} hostname={hostname} ip={ip} port={port} protocol={protocol} data={data}')

    logger.info(f'type={typeService.type(port)} hostname={hostname} ip={ip} port={port} protocol={protocol} data={data}')
    
    log_json(json_file, banner)
